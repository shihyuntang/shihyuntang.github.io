<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Shih-Yun Tang</title>
    <link>https://shihyuntang.github.io/</link>
      <atom:link href="https://shihyuntang.github.io/index.xml" rel="self" type="application/rss+xml" />
    <description>Shih-Yun Tang</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><copyright>© 2018-2021 Shih-Yun Tang</copyright><lastBuildDate>Sat, 01 Jun 2030 13:00:00 +0000</lastBuildDate>
    <image>
      <url>https://shihyuntang.github.io/img/icon-192.png</url>
      <title>Shih-Yun Tang</title>
      <link>https://shihyuntang.github.io/</link>
    </image>
    
    <item>
      <title>Installation</title>
      <link>https://shihyuntang.github.io/astro-data-query_hide/1-1/</link>
      <pubDate>Tue, 11 Aug 2020 00:00:00 +0100</pubDate>
      <guid>https://shihyuntang.github.io/astro-data-query_hide/1-1/</guid>
      <description>&lt;p&gt;Mainly&amp;mdash;as far as I know&amp;mdash;there are two ways to get python. One is straight from &lt;a href=&#34;https://www.python.org&#34;&gt;python.org&lt;/a&gt;. The other one is to install python via &lt;a href=&#34;https://www.anaconda.com/products/individual&#34;&gt;Anaconda&lt;/a&gt;. The preferred one will be via Anaconda&lt;sup&gt;&lt;a href=&#34;#1&#34;&gt;1&lt;/a&gt;*&lt;/sup&gt; cause this helps us ease the pain of package management in the future.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;anaconda&#34;&gt;Anaconda&lt;/h2&gt;
&lt;p&gt;Go on to &lt;a href=&#34;https://www.anaconda.com/products/individual&#34;&gt;&lt;a href=&#34;https://www.anaconda.com/products/individual&#34;&gt;https://www.anaconda.com/products/individual&lt;/a&gt;&lt;/a&gt;, and scroll down to find &lt;strong&gt;Anaconda Installers&lt;/strong&gt;. The default python version should now be later than 3.7&lt;sup&gt;&lt;a href=&#34;#2&#34;&gt;2&lt;/a&gt;**&lt;/sup&gt;. If you are using Windows or Mac, feel free to install via the &lt;strong&gt;graphical installer&lt;/strong&gt; (recommended for people without any knowledge about the command line/terminal). However, installation via the command line installer is much elegant and clean (default for Linux user).&lt;/p&gt;
&lt;h3 id=&#34;installation-via-the-command-line-an-example-for-mac--linux&#34;&gt;Installation via the command line (an example for Mac &amp;amp; Linux)&lt;/h3&gt;
&lt;p&gt;Right-click to copy the link for &lt;strong&gt;command line installer&lt;/strong&gt;, then open the terminal and type &lt;code&gt;wget&lt;/code&gt;&lt;sup&gt;&lt;a href=&#34;#3&#34;&gt;3&lt;/a&gt;**&lt;/sup&gt;, follow a space, then paste the url, e.g.,&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;wget https://repo.anaconda.com/archive/Anaconda3-2020.07-MacOSX-x86_64.sh
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;(make sure to copy the url from Anaconda web page to get the latest python version).&lt;br&gt;
After the download is finished, type &lt;code&gt;bash&lt;/code&gt;, follow by a space, and then type the file name you just downloaded to start the installation, e.g.,&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;bash Anaconda3-2020.07-MacOSX-x86_64.sh
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;After the installation is done, type &lt;code&gt;python&lt;/code&gt; and press Enter to see if you have something like this:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;Python 3.7.7 (default, Mar 26 2020, 10:32:53)
[Clang 4.0.1 (tags/RELEASE_401/final)] :: Anaconda, Inc. on darwin
Type &amp;quot;help&amp;quot;, &amp;quot;copyright&amp;quot;, &amp;quot;credits&amp;quot; or &amp;quot;license&amp;quot; for more information.
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Make sure that your python version is later than 3.7.X, and with &lt;strong&gt;Anaconda, Inc.&lt;/strong&gt; &lt;sup&gt;&lt;a href=&#34;#3&#34;&gt;†&lt;/a&gt;&lt;/sup&gt;.
Type &lt;code&gt;exit()&lt;/code&gt; to leave.&lt;/p&gt;
&lt;p&gt;The benefit of installing via the command line is that you can get rid of the bulky UI, and open the ipython, jupyter lab/notebook IDE from the terminal faster. This effect can be more severe when you have a small RAM (&amp;lt;16GB), and less powerful CPUs.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;learn-more&#34;&gt;Learn More:&lt;/h4&gt;
&lt;p&gt;&lt;a name=&#34;1&#34;&gt;1*&lt;/a&gt;: Find out the relationship between Conda and Anaconda.&lt;br&gt;
&lt;a name=&#34;2&#34;&gt;2**&lt;/a&gt;: Find out the difference between python 2.7.X and python 3.X.&lt;br&gt;
&lt;a name=&#34;3&#34;&gt;3**&lt;/a&gt;: Oh Noooo! &lt;code&gt;Wget&lt;/code&gt; cannot work on my Mac, what should I Dooooo?! Well, &lt;code&gt;curl&lt;/code&gt; might help.&lt;/p&gt;
&lt;h4 id=&#34;fun-fact&#34;&gt;Fun Fact:&lt;/h4&gt;
&lt;p&gt;&lt;a name=&#34;3&#34;&gt;†&lt;/a&gt;: Do you know that every Mac is pre-installed with python?! However, the pre-installed version is out off date, py2.7. Thus, don&#39;t be lazy and download the latest version now!!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>IDE Short Introduction</title>
      <link>https://shihyuntang.github.io/astro-data-query_hide/1-2/</link>
      <pubDate>Tue, 11 Aug 2020 00:00:00 +0100</pubDate>
      <guid>https://shihyuntang.github.io/astro-data-query_hide/1-2/</guid>
      <description>&lt;p&gt;Coming Soon&amp;hellip;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>2-1 HW 3</title>
      <link>https://shihyuntang.github.io/astro-data-query_hide/2-1/</link>
      <pubDate>Tue, 11 Aug 2020 00:00:00 +0100</pubDate>
      <guid>https://shihyuntang.github.io/astro-data-query_hide/2-1/</guid>
      <description>&lt;p&gt;Coming Soon&amp;hellip;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Example Talk</title>
      <link>https://shihyuntang.github.io/talk/example/</link>
      <pubDate>Sat, 01 Jun 2030 13:00:00 +0000</pubDate>
      <guid>https://shihyuntang.github.io/talk/example/</guid>
      <description>&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Click on the &lt;strong&gt;Slides&lt;/strong&gt; button above to view the built-in slides feature.
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Slides can be added in a few ways:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Create&lt;/strong&gt; slides using Academic&#39;s &lt;a href=&#34;https://sourcethemes.com/academic/docs/managing-content/#create-slides&#34;&gt;&lt;em&gt;Slides&lt;/em&gt;&lt;/a&gt; feature and link using &lt;code&gt;slides&lt;/code&gt; parameter in the front matter of the talk file&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Upload&lt;/strong&gt; an existing slide deck to &lt;code&gt;static/&lt;/code&gt; and link using &lt;code&gt;url_slides&lt;/code&gt; parameter in the front matter of the talk file&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Embed&lt;/strong&gt; your slides (e.g. Google Slides) or presentation video on this page using &lt;a href=&#34;https://sourcethemes.com/academic/docs/writing-markdown-latex/&#34;&gt;shortcodes&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Further talk details can easily be added to this page using &lt;em&gt;Markdown&lt;/em&gt; and $\rm \LaTeX$ math code.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Impacts of Water Latent Heat on the Thermal Structure of Ultra-Cool Objects: Brown Dwarfs and Free-Floating Planets</title>
      <link>https://shihyuntang.github.io/publication/202105_ydwarf_moist_apj/</link>
      <pubDate>Mon, 16 Aug 2021 00:00:00 +0000</pubDate>
      <guid>https://shihyuntang.github.io/publication/202105_ydwarf_moist_apj/</guid>
      <description></description>
    </item>
    
    <item>
      <title>IGRINS RV: A Python Package for Precision Radial Velocities with Near-Infrared Spectra</title>
      <link>https://shihyuntang.github.io/publication/202104_igrinsrv_joss/</link>
      <pubDate>Thu, 10 Jun 2021 00:00:00 +0000</pubDate>
      <guid>https://shihyuntang.github.io/publication/202104_igrinsrv_joss/</guid>
      <description></description>
    </item>
    
    <item>
      <title>IGRINS RV: A Precision RV Pipeline for IGRINS Using Modified Forward-Modeling in the Near-Infrared</title>
      <link>https://shihyuntang.github.io/publication/202104_igrinsrv_aj/</link>
      <pubDate>Wed, 26 May 2021 00:00:00 +0000</pubDate>
      <guid>https://shihyuntang.github.io/publication/202104_igrinsrv_aj/</guid>
      <description></description>
    </item>
    
    <item>
      <title>3D Morphology of Open Clusters in the Solar Neighborhood with Gaia EDR3: its Relation to Cluster Dynamics</title>
      <link>https://shihyuntang.github.io/publication/202102_oc3d_apj/</link>
      <pubDate>Mon, 10 May 2021 00:00:00 +0000</pubDate>
      <guid>https://shihyuntang.github.io/publication/202102_oc3d_apj/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Different Fates of Young Star Clusters After Gas Expulsion</title>
      <link>https://shihyuntang.github.io/publication/202006_ngc2232_apjl/</link>
      <pubDate>Sun, 09 Aug 2020 00:00:00 +0000</pubDate>
      <guid>https://shihyuntang.github.io/publication/202006_ngc2232_apjl/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Near-Infrared Radial Velocity pipeline (IGRINS_RV)</title>
      <link>https://shihyuntang.github.io/project/near-infrared-radial-velocity-pipeline-igrins_rv/</link>
      <pubDate>Sun, 21 Jun 2020 00:00:00 +0000</pubDate>
      <guid>https://shihyuntang.github.io/project/near-infrared-radial-velocity-pipeline-igrins_rv/</guid>
      <description>&lt;p&gt;Coming Soon&amp;hellip;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Open Cluster Dynamic Study</title>
      <link>https://shihyuntang.github.io/project/open-cluster-dynamic-study/</link>
      <pubDate>Sun, 21 Jun 2020 00:00:00 +0000</pubDate>
      <guid>https://shihyuntang.github.io/project/open-cluster-dynamic-study/</guid>
      <description>&lt;p&gt;Coming Soon&amp;hellip;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Y-dwarf Atmosphere Study</title>
      <link>https://shihyuntang.github.io/project/y-dwarf-atmosphere-study/</link>
      <pubDate>Sun, 21 Jun 2020 00:00:00 +0000</pubDate>
      <guid>https://shihyuntang.github.io/project/y-dwarf-atmosphere-study/</guid>
      <description>&lt;p&gt;Coming Soon&amp;hellip;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Diagnosing the Stellar Population and Tidal Structure of the Blanco1 Star Cluster</title>
      <link>https://shihyuntang.github.io/publication/202001_blanco1_apj/</link>
      <pubDate>Wed, 29 Jan 2020 00:00:00 +0000</pubDate>
      <guid>https://shihyuntang.github.io/publication/202001_blanco1_apj/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Discovery of Tidal Tails in Disrupting Open Clusters: Coma Berenices and a Neighbor Stellar Group</title>
      <link>https://shihyuntang.github.io/publication/201905_comaber_tail_apj/</link>
      <pubDate>Fri, 17 May 2019 00:00:00 +0000</pubDate>
      <guid>https://shihyuntang.github.io/publication/201905_comaber_tail_apj/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Slides</title>
      <link>https://shihyuntang.github.io/slides/example/</link>
      <pubDate>Tue, 05 Feb 2019 00:00:00 +0000</pubDate>
      <guid>https://shihyuntang.github.io/slides/example/</guid>
      <description>&lt;h1 id=&#34;welcome-to-slides&#34;&gt;Welcome to Slides&lt;/h1&gt;
&lt;p&gt;&lt;a href=&#34;https://sourcethemes.com/academic/&#34;&gt;Academic&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;features&#34;&gt;Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Efficiently write slides in Markdown&lt;/li&gt;
&lt;li&gt;3-in-1: Create, Present, and Publish your slides&lt;/li&gt;
&lt;li&gt;Supports speaker notes&lt;/li&gt;
&lt;li&gt;Mobile friendly slides&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;controls&#34;&gt;Controls&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Next: &lt;code&gt;Right Arrow&lt;/code&gt; or &lt;code&gt;Space&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Previous: &lt;code&gt;Left Arrow&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Start: &lt;code&gt;Home&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Finish: &lt;code&gt;End&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Overview: &lt;code&gt;Esc&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Speaker notes: &lt;code&gt;S&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Fullscreen: &lt;code&gt;F&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Zoom: &lt;code&gt;Alt + Click&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/hakimel/reveal.js#pdf-export&#34;&gt;PDF Export&lt;/a&gt;: &lt;code&gt;E&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;code-highlighting&#34;&gt;Code Highlighting&lt;/h2&gt;
&lt;p&gt;Inline code: &lt;code&gt;variable&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Code block:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;porridge = &amp;quot;blueberry&amp;quot;
if porridge == &amp;quot;blueberry&amp;quot;:
    print(&amp;quot;Eating...&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;h2 id=&#34;math&#34;&gt;Math&lt;/h2&gt;
&lt;p&gt;In-line math: $x + y = z$&lt;/p&gt;
&lt;p&gt;Block math:&lt;/p&gt;
&lt;p&gt;$$
f\left( x \right) = ;\frac{{2\left( {x + 4} \right)\left( {x - 4} \right)}}{{\left( {x + 4} \right)\left( {x + 1} \right)}}
$$&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;fragments&#34;&gt;Fragments&lt;/h2&gt;
&lt;p&gt;Make content appear incrementally&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;{{% fragment %}} One {{% /fragment %}}
{{% fragment %}} **Two** {{% /fragment %}}
{{% fragment %}} Three {{% /fragment %}}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Press &lt;code&gt;Space&lt;/code&gt; to play!&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;fragment &#34; &gt;
One
&lt;/span&gt;
&lt;span class=&#34;fragment &#34; &gt;
&lt;strong&gt;Two&lt;/strong&gt;
&lt;/span&gt;
&lt;span class=&#34;fragment &#34; &gt;
Three
&lt;/span&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;A fragment can accept two optional parameters:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;class&lt;/code&gt;: use a custom style (requires definition in custom CSS)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;weight&lt;/code&gt;: sets the order in which a fragment appears&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;speaker-notes&#34;&gt;Speaker Notes&lt;/h2&gt;
&lt;p&gt;Add speaker notes to your presentation&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;{{% speaker_note %}}
- Only the speaker can read these notes
- Press `S` key to view
{{% /speaker_note %}}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Press the &lt;code&gt;S&lt;/code&gt; key to view the speaker notes!&lt;/p&gt;
&lt;aside class=&#34;notes&#34;&gt;
  &lt;ul&gt;
&lt;li&gt;Only the speaker can read these notes&lt;/li&gt;
&lt;li&gt;Press &lt;code&gt;S&lt;/code&gt; key to view&lt;/li&gt;
&lt;/ul&gt;
&lt;/aside&gt;
&lt;hr&gt;
&lt;h2 id=&#34;themes&#34;&gt;Themes&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;black: Black background, white text, blue links (default)&lt;/li&gt;
&lt;li&gt;white: White background, black text, blue links&lt;/li&gt;
&lt;li&gt;league: Gray background, white text, blue links&lt;/li&gt;
&lt;li&gt;beige: Beige background, dark text, brown links&lt;/li&gt;
&lt;li&gt;sky: Blue background, thin dark text, blue links&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;night: Black background, thick white text, orange links&lt;/li&gt;
&lt;li&gt;serif: Cappuccino background, gray text, brown links&lt;/li&gt;
&lt;li&gt;simple: White background, black text, blue links&lt;/li&gt;
&lt;li&gt;solarized: Cream-colored background, dark green text, blue links&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;/img/boards.jpg&#34;
  &gt;

&lt;h2 id=&#34;custom-slide&#34;&gt;Custom Slide&lt;/h2&gt;
&lt;p&gt;Customize the slide style and background&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;{{&amp;lt; slide background-image=&amp;quot;/img/boards.jpg&amp;quot; &amp;gt;}}
{{&amp;lt; slide background-color=&amp;quot;#0000FF&amp;quot; &amp;gt;}}
{{&amp;lt; slide class=&amp;quot;my-style&amp;quot; &amp;gt;}}
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;h2 id=&#34;custom-css-example&#34;&gt;Custom CSS Example&lt;/h2&gt;
&lt;p&gt;Let&#39;s make headers navy colored.&lt;/p&gt;
&lt;p&gt;Create &lt;code&gt;assets/css/reveal_custom.css&lt;/code&gt; with:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-css&#34;&gt;.reveal section h1,
.reveal section h2,
.reveal section h3 {
  color: navy;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;h1 id=&#34;questions&#34;&gt;Questions?&lt;/h1&gt;
&lt;p&gt;&lt;a href=&#34;https://discourse.gohugo.io&#34;&gt;Ask&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://sourcethemes.com/academic/docs/&#34;&gt;Documentation&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>SPECTRAL ENERGY DISTRIBUTIONS OF T TAURI STARS WITH PASSIVE CIRCUMSTELLAR DISKS</title>
      <link>https://shihyuntang.github.io/post/jupyter-test/</link>
      <pubDate>Tue, 05 Feb 2019 00:00:00 +0000</pubDate>
      <guid>https://shihyuntang.github.io/post/jupyter-test/</guid>
      <description>&lt;h1 id=&#34;spectral-energy-distributions-of-t-tauri-stars-with-passive-circumstellar-disks&#34;&gt;SPECTRAL ENERGY DISTRIBUTIONS OF T TAURI STARS WITH PASSIVE CIRCUMSTELLAR DISKS&lt;/h1&gt;
&lt;p&gt;E. I. CHIANG &amp;amp; P. GOLDREICH (1997, ApJ)&lt;/p&gt;
&lt;p&gt;AST501 &amp;ndash; theory project homework&lt;br&gt;
by Shih-Yun Tang 2021-09-04&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import numpy as np
from astropy import constants as const
from astropy import units as u

import matplotlib
from matplotlib.ticker import (MultipleLocator, FormatStrFormatter,
                               AutoMinorLocator)
import matplotlib.pyplot as plt

import scipy.integrate as integrate
from pqdm.processes import pqdm
from functools import partial
from numba import njit

import warnings
warnings.filterwarnings(&#39;ignore&#39;)
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;basic-parametersfunctions-setup&#34;&gt;Basic parameters/functions setup&lt;/h2&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;

# -- Adopted stellar model parameters --
T_star = 4000                                               # staller effect temperature [K]
M_star = 0.5 * u.M_sun; M_star_cgs = M_star.to(u.g).value   # staller mass [g]
R_star = 2.5 * u.R_sun; R_star_cgs = R_star.to(u.cm).value  # staller radius [cm]

# -- Disk dusk grain pars --
grain_r   = 0.1  * u.um             ; grain_r_cgs   = grain_r.to(u.cm).value    # dusk grain radius [cm]
grain_den = 2.0  * u.g / u.cm**3    ; grain_den_cgs = grain_den.value       # dusk grain density [g / cm3]

a_inner = 0.07  * u.AU; a_inner_cgs  = a_inner.to(u.cm).value   # inner disk radius [cm]
a_outter= 2.7e2 * u.AU; a_outter_cgs = a_outter.to(u.cm).value  # outter disk radius [cm]

# dust_opacity = 400 * u.cm**2 / u.g
# dust_tau     = 4e5 * a

const_h         = const.h.to(u.erg * u.s).value                             # erg * s
const_kB        = const.k_B.to(u.erg / u.K).value                           # erg / K
const_c         = const.c.cgs.value                              # cm / s
const_sigma_sb  = const.sigma_sb.to(u.erg / (u.s * u.cm**2 * u.K**4)).value # erg / ( s * cm2 * K4 )
const_G         = const.G.cgs.value

cm2au = (1*u.cm).to(u.au).value

@njit
def BlackBody_nu(freq, temp, toFlux = True):
    &amp;quot;&amp;quot;&amp;quot;Planck func in nu

    Parameters
    ----------
    freq : float or array
        frequency [Hz]
    temp : float
        effective temperature [K]
    toFlux : bool, optional
        transfer from intensity to flux, by default True

    Returns
    -------
    float or array based on &amp;quot;freq&amp;quot;
        BB intensity or flux
    &amp;quot;&amp;quot;&amp;quot;
    
    log_boltz = const_h * freq / (const_kB * temp)
    boltzm1   = np.expm1(log_boltz)

    # Calculate blackbody
    bb_nu = 2.0 * const_h * freq ** 3 / (const_c ** 2 * boltzm1) # erg / (s * cm2 * Hz * sr)
        
    if toFlux:
        return bb_nu * np.pi   # erg / (s * cm2 * Hz)
    else:
        return bb_nu   # erg / (s * cm2 * Hz * sr)
    
    
def BB_nu_plot(plot_title):
    &amp;quot;&amp;quot;&amp;quot;Plotting function for all BB plots
    &amp;quot;&amp;quot;&amp;quot;
    _fontsize = &#39;small&#39;
    fig, ax = plt.subplots(1, 1, figsize=(5,3.5), facecolor=&#39;white&#39;, dpi=150)

    ax.set_ylabel(r&#39;log L$_\nu$ (L$_\ast$)&#39;, size=_fontsize, style=&#39;normal&#39;, family=&#39;sans-serif&#39;)
    ax.set_xlabel(r&#39;log $\nu$ (Hz)&#39;,         size=_fontsize, style=&#39;normal&#39;, family=&#39;sans-serif&#39;)
    
    ax.set_xlim(11, 15); ax.set_ylim(-4.75, 0.25)
    ax.set_xticks(np.arange(11, 16))
    ax.xaxis.set_minor_locator(AutoMinorLocator(5))
    ax.yaxis.set_minor_locator(AutoMinorLocator(4))
    ax.tick_params(axis=&#39;both&#39;, which=&#39;both&#39;, labelsize=_fontsize, right=True, top=True, direction=&#39;in&#39;, width=0.5)

    um = (f_Hz*u.Hz).to(u.um, equivalencies=u.spectral())

    ax_c = ax.twiny()
    ax_c.set_xlim(um[0].value, um[-1].value)
    ax_c.tick_params(axis=&#39;x&#39;, which=&#39;both&#39;, labelsize=_fontsize, direction=&#39;in&#39;, width=0.5)
    ax_c.set_xscale(&#39;log&#39;)
    ax_c.set_xticks([1e3, 1e2, 1e1, 1e0])
    ax_c.set_xticklabels([&#39;1000&#39;, &#39;100&#39;, &#39;10&#39;, &#39;1&#39;])
    ax_c.set_xlabel(r&#39;$\lambda$ ($\rm \mu$m)&#39;, size=_fontsize, style=&#39;normal&#39;, family=&#39;sans-serif&#39;)

    ax.text(0.05, 0.90, plot_title, size=_fontsize, style=&#39;normal&#39;, family=&#39;sans-serif&#39;, transform = ax.transAxes )
    # ax.text(0.35, 0.15, r&#39;Stellar Blackbody&#39;,   size=_fontsize, style=&#39;normal&#39;, family=&#39;sans-serif&#39;, transform = ax.transAxes )
    # ax.text(0.76, 0.50, r&#39;Disk&#39;,                size=_fontsize, style=&#39;normal&#39;, family=&#39;sans-serif&#39;, transform = ax.transAxes )
    # ax.text(0.50, 0.60, r&#39;Total&#39;,               size=_fontsize, style=&#39;normal&#39;, family=&#39;sans-serif&#39;, transform = ax.transAxes, ha=&#39;right&#39; )
    
    return fig, ax
        
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;figure-1--flat-blackbody-disk&#34;&gt;Figure 1 &amp;ndash; Flat Blackbody Disk&lt;/h2&gt;
&lt;p&gt;Assuming the disk as a blackbody, the stellar radiation incident upon the flat disk is
$$
(\frac{\alpha}{2}) (\frac{R_\ast}{a})^2 \sigma T_\ast^4
$$
where $\alpha$ is the grazing angle.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;why $\alpha/2$ ??&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;With the emitting flux from the star ($flux = \sigma T_{eff}^4$) equals to the absorb flux, we get
$$
\sigma T_{eff}^4 = (\frac{\alpha}{2}) (\frac{R_\ast}{a})^2 \sigma T_\ast^4 \&lt;br&gt;
\Longrightarrow T_{eff}^4 = (\frac{\alpha}{2}) (\frac{R_\ast}{a})^2 T_\ast^4 \&lt;br&gt;
\Longrightarrow T_{eff} = (\frac{\alpha}{2})^{1/4} (\frac{R_\ast}{a})^{1/2} T_\ast \ \ \ \ \ \  (\rm {Eq.\ 1\ in\ paper})
$$&lt;/p&gt;
&lt;p&gt;The Spectral Energy Distrbution (SED), here use the luminosity, of the disk is computed as
$$
L_\nu \equiv 4 \pi d^4 \nu F_\nu [erg/s] \sim
4\pi \nu \int_{a_i}^{a_o} a \pi B_\nu(T_{eff}(a)) ,da \&lt;br&gt;
\Longrightarrow 4\pi^2 \nu \int_{a_i}^{a_o} a B_\nu(T_{eff}(a)) ,da \ \ \ \ \ \  (\rm {Eq.\ 2\ in\ paper})
$$&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;$L_\nu = FA$ [erg/s/Hz], where $A = 4 \pi d^4$&lt;br&gt;
$B_\nu(T_{eff})$ gives the intensity if the blackbody at $T_{eff}$ [erg/s/cm2/Hz/sr]&lt;br&gt;
Why $8\pi^2$ NOT $4\pi^2$?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;With Eq.(2), as &lt;code&gt;python&lt;/code&gt; function &lt;code&gt;disk_SED&lt;/code&gt;, we can now plot Figure 1.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;@njit
def _alpha(a, R_star, flard = False):
    &amp;quot;&amp;quot;&amp;quot;grazing angle

    Parameters
    ----------
    a : float
        disk radius [cm]
    R_star : float
        Star radius [cm]

    Returns
    -------
    float
        grazing angle
    &amp;quot;&amp;quot;&amp;quot;
    if not flard:
        return 0.4 * R_star/a
    else:
        return 0.4 * R_star/a + 0.18 * (2/7) * (a*cm2au)**(2/7)

@njit
def _Teff(a, R_star, T_star, flard = False):
    &amp;quot;&amp;quot;&amp;quot;get disk effective temperature

    Parameters
    ----------
    a : float
        disk radius [cm]
    R_star : float
        Star radius [cm]
    T_star : float
        Star effective temperature [K]

    Returns
    -------
    float
        disk effective temperature [K]
    &amp;quot;&amp;quot;&amp;quot;
    # print(_alpha(a, R_star, flard))
    term1 = ( _alpha(a, R_star, flard) / 2 )**(1/4) 
    term2 = (R_star / a)**0.5
    return term1 * term2 * T_star

flat_BB_intergral = lambda a, nu, R_star, T_star, flard : a * BlackBody_nu(nu, 
                                                               _Teff(a, R_star, T_star, flard),
                                                               False)

def disk_SED(a_i, a_o, R_star, T_star, flard, nu):
    &amp;quot;&amp;quot;&amp;quot;L_nu, right hand side of Chiang &amp;amp; Goldreich 1997&#39;s Equation 2. 
    The finction that generate the disk SED curve

    Parameters
    ----------
    a_i : astropy.unit
        Inner disk radius [cm]
    a_o : astropy.unit
        Outter disk radius [cm]
    R_star : astropy.unit
        Star radius [cm]
    T_star : astropy.unit
        Star effective temperature [K]
    nu : astropy.unit
        frequency

    Returns
    -------
    float
        L_nu, [W]
    &amp;quot;&amp;quot;&amp;quot;
    
    a_intergral = integrate.quad(flat_BB_intergral, a_i, a_o, args=(nu, R_star, T_star, flard) )[0]
     
    return 8 * np.pi**2 * nu * a_intergral
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# --- setup parameters ---
f_Hz = np.logspace(11, 15, 1000) # generate Hz from 1e11 --&amp;gt; 1e15 Hz

# --- generate the BB curve for the star ---
starBB_flux = BlackBody_nu(f_Hz, T_star)   # erg / s / cm2 / Hz

# --- Luminosity for the star ---
L_star     = const_sigma_sb*T_star**4                               # erg / s / cm2 
L_star_cm2 = 4*np.pi * (R_star_cgs)**2 * const_sigma_sb*T_star**4   # erg / s
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# --- loop through all frequency range ---

func_flat = partial(disk_SED, a_inner_cgs, a_outter_cgs, R_star_cgs, T_star, False)
Lv_flat = pqdm(f_Hz, func_flat, n_jobs=6)

func_flared = partial(disk_SED, a_inner_cgs, a_outter_cgs, R_star_cgs, T_star, True)
Lv_flared = pqdm(f_Hz, func_flared, n_jobs=6)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;SUBMITTING | :   0%|          | 0/1000 [00:00&amp;lt;?, ?it/s]



PROCESSING | :   0%|          | 0/1000 [00:00&amp;lt;?, ?it/s]



COLLECTING | :   0%|          | 0/1000 [00:00&amp;lt;?, ?it/s]



SUBMITTING | :   0%|          | 0/1000 [00:00&amp;lt;?, ?it/s]



PROCESSING | :   0%|          | 0/1000 [00:00&amp;lt;?, ?it/s]



COLLECTING | :   0%|          | 0/1000 [00:00&amp;lt;?, ?it/s]
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;f2, ax = BB_nu_plot(&#39;Flat Blackbody Disk&#39;)
ax.plot(np.log10(f_Hz), np.log10(starBB_flux*f_Hz/L_star), &#39;-.&#39;,  c = &#39;k&#39;, lw=0.7, label=&#39;Stellar BB&#39;,  alpha=.5)
ax.plot(np.log10(f_Hz), np.log10(Lv_flat/L_star_cm2),      &#39;--&#39;,  c = &#39;k&#39;, lw=0.7, label=&#39;Disk&#39;,         alpha=.5)
ax.plot(np.log10(f_Hz), np.log10(Lv_flat/L_star_cm2 + starBB_flux*f_Hz/L_star),
                                                       &#39;-&#39;,  c = &#39;k&#39;, lw=0.7, label=&#39;Total&#39;)
ax.legend(fontsize=&#39;small&#39;, edgecolor=&#39;none&#39;, loc=&#39;center left&#39;)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;matplotlib.legend.Legend at 0x7fc592824110&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;index_files/index_9_1.svg&#34; alt=&#34;svg&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;figure-2--flared-blackbody-disk&#34;&gt;Figure 2 &amp;ndash; Flared Blackbody Disk&lt;/h2&gt;
&lt;p&gt;The only change is the grazing angle, which is now in a more general form:
$$
\alpha \sim \frac{0.4 R_\ast}{a} + a \frac{d}{da}(\frac{H}{a})
$$
where H is the height of the visible disk photosphere above the disk midplane. Now, to solve $\frac{H}{a}$.
Assuming the gas is to be isothermal at temperature $T_{eff}$, i.e., in hydrostatic equalibrium, and only effected by the vertial gravity from the midplaine with $g_z = \omega^2 z$. We can write
$$
\frac{\partial p}{\partial z} = -g_z \rho
$$
where p is pressure, z is vertical height from the midplane, and $\rho$ is density.
Give the angle between incident point on the flared disk surface to the star and the disk midplane as $\theta$, we can get
$$
F = m g_z = \frac{GMm}{a^2} \sin{\theta} \&lt;br&gt;
\Longrightarrow g_z = \frac{GM}{a^2} \sin{\theta}
$$
With the small-angle approximation, $\sin{\theta} \sim \theta \sim \tan{\theta}$, we have $\sin{\theta} \sim z/a$, thus
$$
\frac{\partial p}{\partial z} = -g_z \rho \&lt;br&gt;
\Longrightarrow \frac{\partial p}{\partial z} = -\frac{GMz}{a^3} \rho   \ \ \ \ \ \  (3)
$$
Now with the ideal gas law,
$$
pV = nRT \Longrightarrow p(\frac{m}{\rho}) = (\frac{m}{M_u}) (k_B N_A) T \&lt;br&gt;
\Longrightarrow \rho = \frac{p M_u}{k_B N_A T} = \frac{p \mu}{k_B T}
$$
where $\mu$ is the gas mean molecular wright.
Now we can rewrite (3) as
$$
\frac{\partial p}{\partial z} = -\frac{GMz}{a^3} \frac{p \mu}{k_B T} \&lt;br&gt;
\Longrightarrow \frac{\partial p}{p} = -\frac{GM\mu}{a^3 k_B T} z, \partial z
$$
Intergrate both size,
$$
\Longrightarrow \int_{p_0}^{p} \frac{\partial p}{p} = -\frac{GM\mu}{a^3 k_B T} \int_{0}^{z} z, \partial z \&lt;br&gt;
\Longrightarrow \ln{\frac{p}{p_0}} = -\frac{GM\mu}{a^3 k_B T} \frac{1}{2}z^2 \&lt;br&gt;
\Longrightarrow p = p_0 \exp{- \frac{z^2}{2h^2}}
$$
where h, the scale height, is
$$
h = \sqrt{ \frac{k_B T a^3}{G M \mu} }   \ \ \ \ \ \  (\rm {Eq.\ 6\ in\ paper})
$$
With $E=k_B T$, the temperature ($T_c$) equivalent to the gravitational potential energy at the surface of the center star is
$$
T_c = \frac{G M_\ast \mu_g}{R_\ast k_B}\  (\rm {Eq.\ 8\ in\ paper})
$$&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# --- estimating T_c ---
# mean molecular weight: with 73% of H and 26% of He
H_mass    = 0.73 * (1.00784  * u.u).cgs.value
He_mass   = 0.26 * (4.002602 * u.u).cgs.value

T_c = const_G * M_star_cgs * (H_mass+He_mass) / const_kB / R_star_cgs
print(fr&#39;T_c ~ {T_c:1.1E} K. Close to that gave in the paper -&amp;gt; 8E+06 K&#39;)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;T_c ~ 8.2E+06 K. Close to that gave in the paper -&amp;gt; 8E+06 K
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;With Eq. 6 &amp;amp; 8, we now know
$$
\frac{h}{a} = (\frac{T_{eff}}{T_c})^{1/2} (\frac{a}{R_\ast})^{1/2}\ \ \ \ \ \  (\rm {Eq.\ 7\ in\ paper})
$$&lt;/p&gt;
&lt;p&gt;With Eq. 5 - 9, we know solve for $\frac{H}{a}$&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;f1, ax = BB_nu_plot(&#39;Flared Blackbody Disk&#39;)
ax.plot(np.log10(f_Hz), np.log10(starBB_flux*f_Hz/L_star), &#39;-.&#39;,  c = &#39;k&#39;, lw=0.7, label=&#39;Stellar BB&#39;,  alpha=.5)
ax.plot(np.log10(f_Hz), np.log10(Lv_flared/L_star_cm2),     &#39;--&#39;,  c = &#39;k&#39;, lw=0.7, label=&#39;Disk&#39;,  alpha=.5)
ax.plot(np.log10(f_Hz), np.log10(Lv_flared/L_star_cm2 + starBB_flux*f_Hz/L_star),
                                                       &#39;-&#39;,  c = &#39;k&#39;, lw=0.7, label=&#39;Total&#39;)
ax.legend(fontsize=&#39;small&#39;, edgecolor=&#39;none&#39;)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;matplotlib.legend.Legend at 0x7fc591a51f50&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;index_files/index_13_1.svg&#34; alt=&#34;svg&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;Notes:
1. $\tau$ = $\kappa \rho$ s

def MMSN_sigma(a):
    &amp;quot;&amp;quot;&amp;quot;calculate disk surface mass density

    Parameters
    ----------
    a : astropy.unit
        disk radius, must be in AU

    Returns
    -------
    astropy.unit
        disk surface mass density [g/cm2]
    &amp;quot;&amp;quot;&amp;quot;
    if a.unit == &#39;AU&#39;:
        sigma0 = 1e3 * u.g/u.cm**2
        return a.value**(-1.5) * sigma0 
    else:
        raise Exception(&#39;disk radius a must be in astropy.units with AU&#39;)
    

def dust_tau(a):
    &amp;quot;&amp;quot;&amp;quot;calculate the optical depth, tau

    Parameters
    ----------
    a : astropy.unit
        disk radius, must be in AU

    Returns
    -------
    astropy.unit
        optical depth
    &amp;quot;&amp;quot;&amp;quot;
    if a.unit == &#39;AU&#39;:
        return 4e5 * a.value**(-1.5)
    else:
        raise Exception(&#39;disk radius a must be in astropy.units with AU&#39;)

def emissivity(lam, r):
    
    beta = 1
    if lam &amp;lt;= 2*np.pi*r:
        return 1
    elif lam &amp;gt; 2*np.pi*r:
        return (2*np.pi*r / lam) ** beta


def L_nu(nu):
    
    return 0.01 * (nu / 1e13)**(4/3)
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Characterization of Stellar and Substellar Members in the Coma Berenices Star Cluster</title>
      <link>https://shihyuntang.github.io/publication/201808_comber_apj/</link>
      <pubDate>Wed, 01 Aug 2018 00:00:00 +0000</pubDate>
      <guid>https://shihyuntang.github.io/publication/201808_comber_apj/</guid>
      <description></description>
    </item>
    
    <item>
      <title>External Project</title>
      <link>https://shihyuntang.github.io/project_example/external-project/</link>
      <pubDate>Wed, 27 Apr 2016 00:00:00 +0000</pubDate>
      <guid>https://shihyuntang.github.io/project_example/external-project/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Internal Project</title>
      <link>https://shihyuntang.github.io/project_example/internal-project/</link>
      <pubDate>Wed, 27 Apr 2016 00:00:00 +0000</pubDate>
      <guid>https://shihyuntang.github.io/project_example/internal-project/</guid>
      <description>&lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.&lt;/p&gt;
&lt;p&gt;Nullam vel molestie justo. Curabitur vitae efficitur leo. In hac habitasse platea dictumst. Sed pulvinar mauris dui, eget varius purus congue ac. Nulla euismod, lorem vel elementum dapibus, nunc justo porta mi, sed tempus est est vel tellus. Nam et enim eleifend, laoreet sem sit amet, elementum sem. Morbi ut leo congue, maximus velit ut, finibus arcu. In et libero cursus, rutrum risus non, molestie leo. Nullam congue quam et volutpat malesuada. Sed risus tortor, pulvinar et dictum nec, sodales non mi. Phasellus lacinia commodo laoreet. Nam mollis, erat in feugiat consectetur, purus eros egestas tellus, in auctor urna odio at nibh. Mauris imperdiet nisi ac magna convallis, at rhoncus ligula cursus.&lt;/p&gt;
&lt;p&gt;Cras aliquam rhoncus ipsum, in hendrerit nunc mattis vitae. Duis vitae efficitur metus, ac tempus leo. Cras nec fringilla lacus. Quisque sit amet risus at ipsum pharetra commodo. Sed aliquam mauris at consequat eleifend. Praesent porta, augue sed viverra bibendum, neque ante euismod ante, in vehicula justo lorem ac eros. Suspendisse augue libero, venenatis eget tincidunt ut, malesuada at lorem. Donec vitae bibendum arcu. Aenean maximus nulla non pretium iaculis. Quisque imperdiet, nulla in pulvinar aliquet, velit quam ultrices quam, sit amet fringilla leo sem vel nunc. Mauris in lacinia lacus.&lt;/p&gt;
&lt;p&gt;Suspendisse a tincidunt lacus. Curabitur at urna sagittis, dictum ante sit amet, euismod magna. Sed rutrum massa id tortor commodo, vitae elementum turpis tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean purus turpis, venenatis a ullamcorper nec, tincidunt et massa. Integer posuere quam rutrum arcu vehicula imperdiet. Mauris ullamcorper quam vitae purus congue, quis euismod magna eleifend. Vestibulum semper vel augue eget tincidunt. Fusce eget justo sodales, dapibus odio eu, ultrices lorem. Duis condimentum lorem id eros commodo, in facilisis mauris scelerisque. Morbi sed auctor leo. Nullam volutpat a lacus quis pharetra. Nulla congue rutrum magna a ornare.&lt;/p&gt;
&lt;p&gt;Aliquam in turpis accumsan, malesuada nibh ut, hendrerit justo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sed erat nec justo posuere suscipit. Donec ut efficitur arcu, in malesuada neque. Nunc dignissim nisl massa, id vulputate nunc pretium nec. Quisque eget urna in risus suscipit ultricies. Pellentesque odio odio, tincidunt in eleifend sed, posuere a diam. Nam gravida nisl convallis semper elementum. Morbi vitae felis faucibus, vulputate orci placerat, aliquet nisi. Aliquam erat volutpat. Maecenas sagittis pulvinar purus, sed porta quam laoreet at.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
